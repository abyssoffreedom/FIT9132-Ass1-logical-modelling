-- Generated by Oracle SQL Developer Data Modeler 23.1.0.087.0806
--   at:        2024-09-18 12:55:44 AEST
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c

-- Capture run of script in file called rcl_schema_output.txt
set echo on
SPOOL rcl_schema_output.txt

--student id: 35009411
--student name: Shuyang Yan

--student id: 35352086
--student name: Gowtham Sriram Selvakumar

--student id: 34128018
--student name: Jiaxin Chen

--Group id: 137


DROP TABLE author CASCADE CONSTRAINTS;

DROP TABLE bookcopy CASCADE CONSTRAINTS;

DROP TABLE borrower CASCADE CONSTRAINTS;

DROP TABLE borrower_class CASCADE CONSTRAINTS;

DROP TABLE branch CASCADE CONSTRAINTS;

DROP TABLE cat_author CASCADE CONSTRAINTS;

DROP TABLE cat_subject CASCADE CONSTRAINTS;

DROP TABLE catalogue CASCADE CONSTRAINTS;

DROP TABLE isbn CASCADE CONSTRAINTS;

DROP TABLE lga CASCADE CONSTRAINTS;

DROP TABLE loan CASCADE CONSTRAINTS;

DROP TABLE manager CASCADE CONSTRAINTS;

DROP TABLE publisher CASCADE CONSTRAINTS;

DROP TABLE reservation CASCADE CONSTRAINTS;

DROP TABLE subject CASCADE CONSTRAINTS;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE author (
    author_id    NUMBER(4) NOT NULL,
    author_fname VARCHAR2(20),
    author_lname VARCHAR2(20) NOT NULL
);

COMMENT ON COLUMN author.author_id IS
    'author id';

COMMENT ON COLUMN author.author_fname IS
    'author''s first name';

COMMENT ON COLUMN author.author_lname IS
    'author''s last name';

ALTER TABLE author ADD CONSTRAINT author_pk PRIMARY KEY ( author_id );

CREATE TABLE bookcopy (
    branch_code     NUMBER(3) NOT NULL,
    bookcopy_id     NUMBER(4) NOT NULL,
    bookcopy_status CHAR(2) NOT NULL,
    bookcopy_price  NUMBER(5, 1) NOT NULL,
    isbn_no         NUMBER(13) NOT NULL
);

ALTER TABLE bookcopy
    ADD CONSTRAINT book_status_chk CHECK ( bookcopy_status IN ( 'AV', 'DM', 'LO', 'LS', 'OR',
                                                                'ST' ) );

COMMENT ON COLUMN bookcopy.branch_code IS
    'code of the branch';

COMMENT ON COLUMN bookcopy.bookcopy_id IS
    'id of a book';

COMMENT ON COLUMN bookcopy.bookcopy_status IS
    'a status to record the book''s status. 
OR - on reserve
LO - on loan
AV - available
ST - stolen
LS - lost
DM - damaged';

COMMENT ON COLUMN bookcopy.bookcopy_price IS
    'price of a book';

COMMENT ON COLUMN bookcopy.isbn_no IS
    'number of isbn';

ALTER TABLE bookcopy ADD CONSTRAINT bookcopy_pk PRIMARY KEY ( branch_code,
                                                              bookcopy_id );

CREATE TABLE borrower (
    borrower_no       NUMBER(4) NOT NULL,
    borrower_fname    VARCHAR2(20),
    borrower_lname    VARCHAR2(20),
    branch_code       NUMBER(3) NOT NULL,
    borrower_status   CHAR(1) NOT NULL,
    borrower_class_id NUMBER(5) NOT NULL,
    borrower_street   VARCHAR2(30) NOT NULL,
    borrower_city     VARCHAR2(30) NOT NULL,
    borrower_state    CHAR(3) NOT NULL,
    borrower_zipcode  CHAR(4) NOT NULL,
    borrower_phoneno  CHAR(10)
);

ALTER TABLE borrower
    ADD CONSTRAINT chk_borrower_status CHECK ( borrower_status IN ( 'B', 'P' ) );

COMMENT ON COLUMN borrower.borrower_no IS
    'number of the borrower';

COMMENT ON COLUMN borrower.borrower_fname IS
    'first name of the borrower';

COMMENT ON COLUMN borrower.borrower_lname IS
    'last name of the borrower';

COMMENT ON COLUMN borrower.branch_code IS
    'code of the branch';

COMMENT ON COLUMN borrower.borrower_status IS
    'status of borrowers, P for permitted and B for banned.';

COMMENT ON COLUMN borrower.borrower_class_id IS
    'identifier for class type';

COMMENT ON COLUMN borrower.borrower_street IS
    'street name of the borrower''s address';

COMMENT ON COLUMN borrower.borrower_city IS
    'city the borrower resides in';

COMMENT ON COLUMN borrower.borrower_state IS
    'state the borrower resides in';

COMMENT ON COLUMN borrower.borrower_zipcode IS
    'zipcode of the borrower';

COMMENT ON COLUMN borrower.borrower_phoneno IS
    'phone number of the borrower';

ALTER TABLE borrower ADD CONSTRAINT borrower_pk PRIMARY KEY ( borrower_no );

CREATE TABLE borrower_class (
    borrower_class_id         NUMBER(5) NOT NULL,
    borrower_class_name       VARCHAR2(30) NOT NULL,
    borrower_class_loanperiod NUMBER(2) NOT NULL,
    borrower_class_book_limit NUMBER(2) NOT NULL
);

COMMENT ON COLUMN borrower_class.borrower_class_id IS
    'identifier for class type';

COMMENT ON COLUMN borrower_class.borrower_class_name IS
    'type of borrower class';

COMMENT ON COLUMN borrower_class.borrower_class_loanperiod IS
    'loan period of the borrower class';

COMMENT ON COLUMN borrower_class.borrower_class_book_limit IS
    'the number of books a borrower class can loan';

ALTER TABLE borrower_class ADD CONSTRAINT borrower_class_pk PRIMARY KEY ( borrower_class_id );

CREATE TABLE branch (
    branch_code    NUMBER(3) NOT NULL,
    branch_name    VARCHAR2(30) NOT NULL,
    branch_address VARCHAR2(60) NOT NULL,
    branch_phoneno CHAR(10) NOT NULL,
    lga_code       NUMBER(7) NOT NULL,
    manager_id     NUMBER(7) NOT NULL
);

COMMENT ON COLUMN branch.branch_code IS
    'code of the branch';

COMMENT ON COLUMN branch.branch_name IS
    'name of the branch';

COMMENT ON COLUMN branch.branch_address IS
    'address of the branch';

COMMENT ON COLUMN branch.branch_phoneno IS
    'phone number of the branch';

COMMENT ON COLUMN branch.lga_code IS
    'code of the lga';

COMMENT ON COLUMN branch.manager_id IS
    'identifier of the manager';

ALTER TABLE branch ADD CONSTRAINT branch_pk PRIMARY KEY ( branch_code );

CREATE TABLE cat_author (
    ctlg_call_no VARCHAR2(30) NOT NULL,
    author_id    NUMBER(4) NOT NULL
);

COMMENT ON COLUMN cat_author.ctlg_call_no IS
    'catalogue call number';

COMMENT ON COLUMN cat_author.author_id IS
    'author id';

ALTER TABLE cat_author ADD CONSTRAINT cat_author_pk PRIMARY KEY ( ctlg_call_no,
                                                                  author_id );

CREATE TABLE cat_subject (
    ctlg_call_no VARCHAR2(30) NOT NULL,
    subject_id   NUMBER(4) NOT NULL
);

COMMENT ON COLUMN cat_subject.ctlg_call_no IS
    'catalogue call number';

COMMENT ON COLUMN cat_subject.subject_id IS
    'id of the subject';

ALTER TABLE cat_subject ADD CONSTRAINT cat_subject_pk PRIMARY KEY ( ctlg_call_no,
                                                                    subject_id );

CREATE TABLE catalogue (
    ctlg_call_no          VARCHAR2(30) NOT NULL,
    ctlg_title            VARCHAR2(30) NOT NULL,
    ctlg_description      VARCHAR2(200) NOT NULL,
    ctlg_publication_year DATE NOT NULL,
    ctlg_classificatioon  CHAR(1) NOT NULL,
    ctlg_no_of_pages      NUMBER(4) NOT NULL,
    ctlg_reading_level    NUMBER(2),
    ctlg_edition          VARCHAR2(30),
    ctlg_lang             VARCHAR2(20) NOT NULL,
    ctlg_note             VARCHAR2(100),
    publisher_id          NUMBER(4) NOT NULL
);

ALTER TABLE catalogue
    ADD CONSTRAINT chk_classification CHECK ( ctlg_classificatioon IN ( 'F', 'R' ) );

ALTER TABLE catalogue ADD CHECK ( ctlg_reading_level BETWEEN 1 AND 30 );

COMMENT ON COLUMN catalogue.ctlg_call_no IS
    'catalogue call number';

COMMENT ON COLUMN catalogue.ctlg_title IS
    'catalogue title';

COMMENT ON COLUMN catalogue.ctlg_description IS
    'catalogue description';

COMMENT ON COLUMN catalogue.ctlg_publication_year IS
    'catalogue published year';

COMMENT ON COLUMN catalogue.ctlg_classificatioon IS
    'catalogue''s classification,R for reference and F for Fiction';

COMMENT ON COLUMN catalogue.ctlg_no_of_pages IS
    'the number of pages of the catalogue';

COMMENT ON COLUMN catalogue.ctlg_reading_level IS
    'catalogue reading level';

COMMENT ON COLUMN catalogue.ctlg_edition IS
    'edition of the book in catalogue';

COMMENT ON COLUMN catalogue.ctlg_lang IS
    'language of the catalogue';

COMMENT ON COLUMN catalogue.ctlg_note IS
    'notes about the book in the catalogue';

COMMENT ON COLUMN catalogue.publisher_id IS
    'id of the publisher';

ALTER TABLE catalogue ADD CONSTRAINT catalogue_pk PRIMARY KEY ( ctlg_call_no );

CREATE TABLE isbn (
    isbn_no        NUMBER(13) NOT NULL,
    isbn_book_type VARCHAR2(20) NOT NULL,
    ctlg_call_no   VARCHAR2(30) NOT NULL
);

COMMENT ON COLUMN isbn.isbn_no IS
    'number of isbn';

COMMENT ON COLUMN isbn.isbn_book_type IS
    'booktype of a certain book';

COMMENT ON COLUMN isbn.ctlg_call_no IS
    'catalogue call number';

ALTER TABLE isbn ADD CONSTRAINT isbn_pk PRIMARY KEY ( isbn_no );

CREATE TABLE lga (
    lga_code         NUMBER(7) NOT NULL,
    lga_name         VARCHAR2(30) NOT NULL,
    lga_size         NUMBER(5, 2) NOT NULL,
    lga_contact_name VARCHAR2(30) NOT NULL,
    lga_phoneno      CHAR(10) NOT NULL
);

COMMENT ON COLUMN lga.lga_code IS
    'code of the lga';

COMMENT ON COLUMN lga.lga_name IS
    'name of the lga';

COMMENT ON COLUMN lga.lga_size IS
    'size of the lga building';

COMMENT ON COLUMN lga.lga_contact_name IS
    'name of the contact person in lga';

COMMENT ON COLUMN lga.lga_phoneno IS
    'phone number of lga';

ALTER TABLE lga ADD CONSTRAINT lga_pk PRIMARY KEY ( lga_code );

CREATE TABLE loan (
    loan_id              NUMBER(7) NOT NULL,
    branch_code          NUMBER(3) NOT NULL,
    bookcopy_id          NUMBER(4) NOT NULL,
    loan_borrow_datetime DATE NOT NULL,
    loan_due_date        DATE NOT NULL,
    loan_return_datetime DATE,
    borrower_no          NUMBER(4) NOT NULL,
    fine_amnt            VARCHAR2(5),
    fine_paiddate        DATE
);

COMMENT ON COLUMN loan.loan_id IS
    'identifier of the loan';

COMMENT ON COLUMN loan.branch_code IS
    'code of the branch';

COMMENT ON COLUMN loan.bookcopy_id IS
    'id of a book';

COMMENT ON COLUMN loan.loan_borrow_datetime IS
    'borrow datetime of a loan';

COMMENT ON COLUMN loan.loan_due_date IS
    'due date of a loan';

COMMENT ON COLUMN loan.loan_return_datetime IS
    'return datetime of a loan';

COMMENT ON COLUMN loan.borrower_no IS
    'number of the borrower';

COMMENT ON COLUMN loan.fine_amnt IS
    'fine amount';

COMMENT ON COLUMN loan.fine_paiddate IS
    'fine paid date';

ALTER TABLE loan ADD CONSTRAINT loan_pk PRIMARY KEY ( loan_id );

ALTER TABLE loan
    ADD CONSTRAINT loan_nk UNIQUE ( branch_code,
                                    bookcopy_id,
                                    loan_borrow_datetime );

CREATE TABLE manager (
    manager_id      NUMBER(7) NOT NULL,
    manager_fname   VARCHAR2(20),
    manager_lname   VARCHAR2(20),
    manager_phoneno CHAR(10),
    branch_code     NUMBER(3) NOT NULL
);

COMMENT ON COLUMN manager.manager_id IS
    'identifier of the manager';

COMMENT ON COLUMN manager.manager_fname IS
    'first name of the manager';

COMMENT ON COLUMN manager.manager_lname IS
    'last name of the manager';

COMMENT ON COLUMN manager.manager_phoneno IS
    'phone number of the manager';

COMMENT ON COLUMN manager.branch_code IS
    'code of the branch';

CREATE UNIQUE INDEX manager__idx ON
    manager (
        branch_code
    ASC );

ALTER TABLE manager ADD CONSTRAINT manager_pk PRIMARY KEY ( manager_id );

CREATE TABLE publisher (
    publisher_id   NUMBER(4) NOT NULL,
    publisher_name VARCHAR2(30) NOT NULL
);

COMMENT ON COLUMN publisher.publisher_id IS
    'id of the publisher';

COMMENT ON COLUMN publisher.publisher_name IS
    'name of the publisher';

ALTER TABLE publisher ADD CONSTRAINT publisher_pk PRIMARY KEY ( publisher_id );

CREATE TABLE reservation (
    reservation_id       NUMBER(7) NOT NULL,
    reservation_datetime DATE NOT NULL,
    branch_code          NUMBER(3) NOT NULL,
    bookcopy_id          NUMBER(4) NOT NULL,
    borrower_no          NUMBER(4) NOT NULL
);

COMMENT ON COLUMN reservation.reservation_id IS
    'id of the reservation';

COMMENT ON COLUMN reservation.branch_code IS
    'code of the branch';

COMMENT ON COLUMN reservation.bookcopy_id IS
    'id of a book';

COMMENT ON COLUMN reservation.borrower_no IS
    'number of the borrower';

ALTER TABLE reservation ADD CONSTRAINT reservation_pk PRIMARY KEY ( reservation_id );

ALTER TABLE reservation
    ADD CONSTRAINT reservation_nk UNIQUE ( reservation_datetime,
                                           branch_code,
                                           bookcopy_id );

CREATE TABLE subject (
    subject_id   NUMBER(4) NOT NULL,
    subject_desc VARCHAR2(50) NOT NULL
);

COMMENT ON COLUMN subject.subject_id IS
    'id of the subject';

COMMENT ON COLUMN subject.subject_desc IS
    'a description of the subject';

ALTER TABLE subject ADD CONSTRAINT subject_pk PRIMARY KEY ( subject_id );

ALTER TABLE borrower
    ADD CONSTRAINT bclass_borrower_fk FOREIGN KEY ( borrower_class_id )
        REFERENCES borrower_class ( borrower_class_id );

ALTER TABLE loan
    ADD CONSTRAINT bookcopy_loan_fk FOREIGN KEY ( branch_code,
                                                  bookcopy_id )
        REFERENCES bookcopy ( branch_code,
                              bookcopy_id );

ALTER TABLE reservation
    ADD CONSTRAINT bookcopy_reservation_fk FOREIGN KEY ( branch_code,
                                                         bookcopy_id )
        REFERENCES bookcopy ( branch_code,
                              bookcopy_id );

ALTER TABLE borrower
    ADD CONSTRAINT borrower_homebranch_fk FOREIGN KEY ( branch_code )
        REFERENCES branch ( branch_code );

ALTER TABLE loan
    ADD CONSTRAINT borrower_loan_fk FOREIGN KEY ( borrower_no )
        REFERENCES borrower ( borrower_no );

ALTER TABLE reservation
    ADD CONSTRAINT borrower_reservation_fk FOREIGN KEY ( borrower_no )
        REFERENCES borrower ( borrower_no );

ALTER TABLE bookcopy
    ADD CONSTRAINT branch_bookcopy_fk FOREIGN KEY ( branch_code )
        REFERENCES branch ( branch_code );

ALTER TABLE cat_author
    ADD CONSTRAINT cat_catauthor_fk FOREIGN KEY ( ctlg_call_no )
        REFERENCES catalogue ( ctlg_call_no );

ALTER TABLE cat_subject
    ADD CONSTRAINT cat_catsubject FOREIGN KEY ( ctlg_call_no )
        REFERENCES catalogue ( ctlg_call_no );

ALTER TABLE isbn
    ADD CONSTRAINT catalogue_isbn_fk FOREIGN KEY ( ctlg_call_no )
        REFERENCES catalogue ( ctlg_call_no );

ALTER TABLE cat_author
    ADD CONSTRAINT catauthor_author_fk FOREIGN KEY ( author_id )
        REFERENCES author ( author_id );

ALTER TABLE bookcopy
    ADD CONSTRAINT isbn_bookcopy_fk FOREIGN KEY ( isbn_no )
        REFERENCES isbn ( isbn_no );

ALTER TABLE branch
    ADD CONSTRAINT lga_branch_fk FOREIGN KEY ( lga_code )
        REFERENCES lga ( lga_code );

ALTER TABLE branch
    ADD CONSTRAINT manager_branch_fk FOREIGN KEY ( manager_id )
        REFERENCES manager ( manager_id );

ALTER TABLE manager
    ADD CONSTRAINT manager_homebranch FOREIGN KEY ( branch_code )
        REFERENCES branch ( branch_code );

ALTER TABLE catalogue
    ADD CONSTRAINT publisher_catalogue_fk FOREIGN KEY ( publisher_id )
        REFERENCES publisher ( publisher_id );

ALTER TABLE cat_subject
    ADD CONSTRAINT subject_catsubject_fk FOREIGN KEY ( subject_id )
        REFERENCES subject ( subject_id );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            15
-- CREATE INDEX                             1
-- ALTER TABLE                             38
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0
SPOOL off
set echo off
